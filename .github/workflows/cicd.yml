name: 'coverage'
on:
    pull_request:
        branches:
            - main
jobs:
    testing:
        runs-on: ubuntu-latest
        env:
          POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
          POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
          POSTGRES_HOST: ${{ secrets.POSTGRES_HOST }}
          POSTGRES_PORT: ${{ secrets.POSTGRES_PORT }}
        services:
          redis:
            # Docker Hub image
            image: redis
            ports:
              - 6379:6379
            options: >-
              --health-cmd "redis-cli ping"
              --health-interval 10s
              --health-timeout 5s
              --health-retries 5

          postgres_main:
            image: postgres:latest
            env:
              POSTGRES_USER: ${{ env.POSTGRES_USER }}
              POSTGRES_PASSWORD: ${{ env.POSTGRES_PASSWORD }}
              POSTGRES_DB: ${{ env.POSTGRES_DB }}
            ports:
              - 5432:5432
            options:
              --health-cmd pg_isready
              --health-interval 5s
              --health-timeout 5s
              --health-retries 5

        steps:
          - name: checkout
            uses: actions/checkout@v2

          - name: install python
            uses: actions/setup-python@v5
            with:
              python-version: 3.11

          - name: install pip
            run: pip install -r requirements.txt

          - name: migrate database
            run: python manage.py migrate

          - name: run Celery worker and tests
            run: |
              celery -A orders worker --loglevel=info & 
              pytest --cov --cov-report xml:coverage.xml
            env:
              POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
              POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
              POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
              POSTGRES_HOST: ${{ secrets.POSTGRES_HOST }}
              POSTGRES_PORT: ${{ secrets.POSTGRES_PORT }}
              CELERY_BROKER_URL: redis://localhost:6379/0
              CELERY_RESULT_BACKEND: redis://localhost:6379/0

          - name: Upload coverage report to PR
            uses: orgoro/coverage@v3.2
            with:
              coverageFile: coverage.xml
              token: ${{ secrets.GITHUB_TOKEN }}
              sourceDir: .
