#
#services:
#  db:
#    image: postgres:14.3-alpine3.15
#    ports:
#      - "5432:5432"
##    environment:
##      POSTGRES_USER: ${POSTGRES_USER}
##      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
##      POSTGRES_DB: ${POSTGRES_DB}
#    env_file:
#      - /orders/.env
#


volumes:
  db_data:
  static:

services:
  app:
    build:
      context: .
    depends_on:
      db:
        condition: service_healthy
#      - migrate
    ports:
      - "8082:8000"
    volumes:
      - .:/orders
      - static:/orders/static
    env_file:
      - /orders/.env
    healthcheck:
      test: [ "CMD-SHELL", "sh", "-c", "pg_isready" ]
      interval: 10s
      timeout: 5s
      retries: 5


  migrate:
    build:
      context: .
    volumes:
      - .:/orders
    env_file:
      - /orders/.env
    depends_on:
      db:
        condition: service_healthy
    entrypoint: python3 manage.py migrate

  db:
    image: postgres:16.8-alpine3.21
    ports:
      - "5431:5432"
    env_file:
      - /orders/.env
    volumes:
      - db_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "sh", "-c", "pg_isready"]
      interval: 10s
      timeout: 5s
      retries: 5

  nginx:
    image: nginx:1.26.3-alpine
    ports:
      - "80:80"
    depends_on:
      - app
    volumes:
      #- static:/var/www/html/static
      - ./static:/static
      - ./nginx-conf:/etc/nginx/conf.d

